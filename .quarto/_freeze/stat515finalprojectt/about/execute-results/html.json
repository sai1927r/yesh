{
  "hash": "a605a2faa6b21572b68ddbd898f4e9be",
  "result": {
    "markdown": "---\ntitle: \"Statistical Analysis of the Dataset\"\n---\n\n\n### Distribution of Variables\n\nIt represents the number of visualizations to examine the distribution of different variables in the dataset using the R ggplot2 library. Different plots are produced by each ggplot call; they include histograms for continuous variables like age, bilirubin levels, and platelet counts, and bar charts for categorical variables like drug type, sex, and disease status. Value distribution is efficiently seen by building the histograms with predetermined bin widths. With their thorough overview of the dataset, these visualizations make it easier to spot trends, patterns, and possible outliers in a variety of variables. All things considered, this method effectively condenses the dataset's distributional properties, providing a strong basis for more exploratory data analysis and statistical modeling.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata = read.csv(\"C:/Users/HP/Downloads/cirrhosis+patient+survival+prediction+dataset-1/cirrhosis.csv\")\nmissing_values <- colSums(is.na(data))\n# If there are missing values, impute them using mean imputation\ndata_imputed <- na.omit(data)\ncirrhosis_data <- na.omit(data_imputed)\nhead(cirrhosis_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  ID N_Days Status            Drug   Age Sex Ascites Hepatomegaly Spiders Edema\n1  1    400      D D-penicillamine 21464   F       Y            Y       Y     Y\n2  2   4500      C D-penicillamine 20617   F       N            Y       Y     N\n3  3   1012      D D-penicillamine 25594   M       N            N       N     S\n4  4   1925      D D-penicillamine 19994   F       N            Y       Y     S\n5  5   1504     CL         Placebo 13918   F       N            Y       Y     N\n7  7   1832      C         Placebo 20284   F       N            Y       N     N\n  Bilirubin Cholesterol Albumin Copper Alk_Phos   SGOT Tryglicerides Platelets\n1      14.5         261    2.60    156   1718.0 137.95           172       190\n2       1.1         302    4.14     54   7394.8 113.52            88       221\n3       1.4         176    3.48    210    516.0  96.10            55       151\n4       1.8         244    2.54     64   6121.8  60.63            92       183\n5       3.4         279    3.53    143    671.0 113.15            72       136\n7       1.0         322    4.09     52    824.0  60.45           213       204\n  Prothrombin Stage\n1        12.2     4\n2        10.6     3\n3        12.0     4\n4        10.3     4\n5        10.9     3\n7         9.7     3\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)  \nlibrary(ggplot2)\n\n\n# Drug\nggplot(data_imputed, aes(x = Drug)) +\n  geom_bar(fill = \"skyblue\", color = \"black\") +\n  labs(x = \"Drug\", y = \"Count\", title = \"Distribution of Drug\")\n```\n\n::: {.cell-output-display}\n![](about_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Age\nggplot(data_imputed, aes(x = Age)) +\n  geom_histogram(binwidth = 1000, fill = \"skyblue\", color = \"black\") +\n  labs(x = \"Age\", y = \"Frequency\", title = \"Distribution of Age\")\n```\n\n::: {.cell-output-display}\n![](about_files/figure-html/unnamed-chunk-2-2.png){width=672}\n:::\n\n```{.r .cell-code}\n# Ascites\nggplot(data_imputed, aes(x = Ascites)) +\n  geom_bar(fill = \"skyblue\", color = \"black\") +\n  labs(x = \"Ascites\", y = \"Count\", title = \"Distribution of Ascites\")\n```\n\n::: {.cell-output-display}\n![](about_files/figure-html/unnamed-chunk-2-3.png){width=672}\n:::\n\n```{.r .cell-code}\n# Hepatomegaly\nggplot(data_imputed, aes(x = Hepatomegaly)) +\n  geom_bar(fill = \"skyblue\", color = \"black\") +\n  labs(x = \"Hepatomegaly\", y = \"Count\", title = \"Distribution of Hepatomegaly\")\n```\n\n::: {.cell-output-display}\n![](about_files/figure-html/unnamed-chunk-2-4.png){width=672}\n:::\n\n```{.r .cell-code}\n# Spiders\nggplot(data_imputed, aes(x = Spiders)) +\n  geom_bar(fill = \"skyblue\", color = \"black\") +\n  labs(x = \"Spiders\", y = \"Count\", title = \"Distribution of Spiders\")\n```\n\n::: {.cell-output-display}\n![](about_files/figure-html/unnamed-chunk-2-5.png){width=672}\n:::\n\n```{.r .cell-code}\n# Edema\nggplot(data_imputed, aes(x = Edema)) +\n  geom_bar(fill = \"skyblue\", color = \"black\") +\n  labs(x = \"Edema\", y = \"Count\", title = \"Distribution of Edema\")\n```\n\n::: {.cell-output-display}\n![](about_files/figure-html/unnamed-chunk-2-6.png){width=672}\n:::\n\n```{.r .cell-code}\n# Bilirubin\nggplot(data_imputed, aes(x = Bilirubin)) +\n  geom_histogram(binwidth = 1, fill = \"skyblue\", color = \"black\") +\n  labs(x = \"Bilirubin\", y = \"Frequency\", title = \"Distribution of Bilirubin\")\n```\n\n::: {.cell-output-display}\n![](about_files/figure-html/unnamed-chunk-2-7.png){width=672}\n:::\n\n```{.r .cell-code}\n# Cholesterol\nggplot(data_imputed, aes(x = Cholesterol)) +\n  geom_histogram(binwidth = 50, fill = \"skyblue\", color = \"black\") +\n  labs(x = \"Cholesterol\", y = \"Frequency\", title = \"Distribution of Cholesterol\")\n```\n\n::: {.cell-output-display}\n![](about_files/figure-html/unnamed-chunk-2-8.png){width=672}\n:::\n\n```{.r .cell-code}\n# Albumin\nggplot(data_imputed, aes(x = Albumin)) +\n  geom_histogram(binwidth = 0.5, fill = \"skyblue\", color = \"black\") +\n  labs(x = \"Albumin\", y = \"Frequency\", title = \"Distribution of Albumin\")\n```\n\n::: {.cell-output-display}\n![](about_files/figure-html/unnamed-chunk-2-9.png){width=672}\n:::\n\n```{.r .cell-code}\n# Copper\nggplot(data_imputed, aes(x = Copper)) +\n  geom_histogram(binwidth = 50, fill = \"skyblue\", color = \"black\") +\n  labs(x = \"Copper\", y = \"Frequency\", title = \"Distribution of Copper\")\n```\n\n::: {.cell-output-display}\n![](about_files/figure-html/unnamed-chunk-2-10.png){width=672}\n:::\n\n```{.r .cell-code}\n# Alk_Phos\nggplot(data_imputed, aes(x = Alk_Phos)) +\n  geom_histogram(binwidth = 500, fill = \"skyblue\", color = \"black\") +\n  labs(x = \"Alkaline Phosphatase\", y = \"Frequency\", title = \"Distribution of Alkaline Phosphatase\")\n```\n\n::: {.cell-output-display}\n![](about_files/figure-html/unnamed-chunk-2-11.png){width=672}\n:::\n\n```{.r .cell-code}\n# SGOT\nggplot(data_imputed, aes(x = SGOT)) +\n  geom_histogram(binwidth = 10, fill = \"skyblue\", color = \"black\") +\n  labs(x = \"SGOT\", y = \"Frequency\", title = \"Distribution of SGOT\")\n```\n\n::: {.cell-output-display}\n![](about_files/figure-html/unnamed-chunk-2-12.png){width=672}\n:::\n\n```{.r .cell-code}\n# Triglycerides\nggplot(data_imputed, aes(x = Tryglicerides)) +\n  geom_histogram(binwidth = 10, fill = \"skyblue\", color = \"black\") +\n  labs(x = \"Triglycerides\", y = \"Frequency\", title = \"Distribution of Triglycerides\")\n```\n\n::: {.cell-output-display}\n![](about_files/figure-html/unnamed-chunk-2-13.png){width=672}\n:::\n\n```{.r .cell-code}\n# Platelets\nggplot(data_imputed, aes(x = Platelets)) +\n  geom_histogram(binwidth = 50, fill = \"skyblue\", color = \"black\") +\n  labs(x = \"Platelets\", y = \"Frequency\", title = \"Distribution of Platelets\")\n```\n\n::: {.cell-output-display}\n![](about_files/figure-html/unnamed-chunk-2-14.png){width=672}\n:::\n\n```{.r .cell-code}\n# Prothrombin\nggplot(data_imputed, aes(x = Prothrombin)) +\n  geom_histogram(binwidth = 0.5, fill = \"skyblue\", color = \"black\") +\n  labs(x = \"Prothrombin\", y = \"Frequency\", title = \"Distribution of Prothrombin\")\n```\n\n::: {.cell-output-display}\n![](about_files/figure-html/unnamed-chunk-2-15.png){width=672}\n:::\n\n```{.r .cell-code}\n# Stage\nggplot(data_imputed, aes(x = Stage)) +\n  geom_bar(fill = \"skyblue\", color = \"black\") +\n  labs(x = \"Stage\", y = \"Count\", title = \"Distribution of Stage\")\n```\n\n::: {.cell-output-display}\n![](about_files/figure-html/unnamed-chunk-2-16.png){width=672}\n:::\n:::\n\n\nThe purpose of these chi-square tests is to evaluate the relationship between the target variable Status and each disease-related characteristic (edema, spiders, hepatomegaly, and ascites). The distribution of the disease-related characteristic is independent of the severity of the condition represented by Status, according to the null hypothesis for each test, which states that there is no association between the disease-related feature and Status. An relationship between the two variables is the alternate hypothesis.\\\nEach chi-square test's p-value expresses the likelihood of seeing the data in the event that the null hypothesis were correct. A low p-value (\\< 0.05) indicates that there is enough data to rule out the null hypothesis and draw the conclusion that Status and the disease-related characteristic are significantly correlated.\n\nAlthough the p-value (0.0007102) is slightly larger than the typical significance level of 0.05, it is still considered statistically significant. Thus, we conclude that there is a significant association between Spiders and Status\n\n### Disease affecting the target variable S\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create contingency tables for each disease-related feature and Status\ntable_ascites <- table(data_imputed$Ascites, data_imputed$Status)\ntable_hepatomegaly <- table(data_imputed$Hepatomegaly, data_imputed$Status)\ntable_spiders <- table(data_imputed$Spiders, data_imputed$Status)\ntable_edema <- table(data_imputed$Edema, data_imputed$Status)\n\n# Visualize the relationship using stacked bar charts\npar(mfrow = c(2, 2))  # Set up a 2x2 layout for plots\nbarplot(table_ascites, beside = TRUE, legend = TRUE, main = \"Ascites vs. Status\")\nbarplot(table_hepatomegaly, beside = TRUE, legend = TRUE, main = \"Hepatomegaly vs. Status\")\nbarplot(table_spiders, beside = TRUE, legend = TRUE, main = \"Spiders vs. Status\")\nbarplot(table_edema, beside = TRUE, legend = TRUE, main = \"Edema vs. Status\")\n```\n\n::: {.cell-output-display}\n![](about_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Conduct chi-square tests for independence\nchi_sq_ascites <- chisq.test(table_ascites)\nchi_sq_hepatomegaly <- chisq.test(table_hepatomegaly)\nchi_sq_spiders <- chisq.test(table_spiders)\nchi_sq_edema <- chisq.test(table_edema)\n\n# Print the results of chi-square tests\nprint(\"Chi-square test results for Ascites vs. Status:\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Chi-square test results for Ascites vs. Status:\"\n```\n:::\n\n```{.r .cell-code}\nprint(chi_sq_ascites)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tPearson's Chi-squared test\n\ndata:  table_ascites\nX-squared = 25.237, df = 2, p-value = 3.31e-06\n```\n:::\n\n```{.r .cell-code}\nprint(\"Chi-square test results for Hepatomegaly vs. Status:\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Chi-square test results for Hepatomegaly vs. Status:\"\n```\n:::\n\n```{.r .cell-code}\nprint(chi_sq_hepatomegaly)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tPearson's Chi-squared test\n\ndata:  table_hepatomegaly\nX-squared = 24.805, df = 2, p-value = 4.109e-06\n```\n:::\n\n```{.r .cell-code}\nprint(\"Chi-square test results for Spiders vs. Status:\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Chi-square test results for Spiders vs. Status:\"\n```\n:::\n\n```{.r .cell-code}\nprint(chi_sq_spiders)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tPearson's Chi-squared test\n\ndata:  table_spiders\nX-squared = 14.5, df = 2, p-value = 0.0007102\n```\n:::\n\n```{.r .cell-code}\nprint(\"Chi-square test results for Edema vs. Status:\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Chi-square test results for Edema vs. Status:\"\n```\n:::\n\n```{.r .cell-code}\nprint(chi_sq_edema)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tPearson's Chi-squared test\n\ndata:  table_edema\nX-squared = 31.267, df = 4, p-value = 2.7e-06\n```\n:::\n:::\n\n\n### Clustering\n\nThe thresholds for aberrant values derived from broad reference ranges for a variety of laboratory measures that are frequently linked to the health and function of the liver.\n\nTo find patient groups with comparable laboratory profiles, we apply k-means clustering to the scaled laboratory values.\n\nConstruction of a survival object based on the time to an event death and fits a survival model using the Kaplan-Meier estimator. Kaplan-Meier survival curves are plotted for each cluster, showing the probability of survival over time.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Define thresholds for abnormal values based on general reference ranges\nthresholds <- list(\n  Bilirubin = c(0.3, 1.2),              # Normal total bilirubin levels (mg/dL)\n  Cholesterol = c(0, 200),               # Normal total cholesterol levels (mg/dL)\n  Albumin = c(3.5, 5.0),                 # Normal serum albumin levels (g/dL)\n  Copper = c(70, 140),                   # Normal serum copper levels (µg/dL)\n  Alk_Phos = c(44, 147),                 # Normal alkaline phosphatase levels (IU/L)\n  SGOT = c(0, 40),                       # Normal serum glutamic-oxaloacetic transaminase levels (IU/L)\n  Tryglicerides = c(0, 150),             # Normal triglyceride levels (mg/dL)\n  Platelets = c(150, 450),         # Normal platelet counts (per microliter of blood)\n  Prothrombin = c(11, 13.5)              # Normal prothrombin time (seconds)\n)\n\n# Select the relevant lab value columns\nlab_columns <- cirrhosis_data %>%\n  select(Bilirubin, Cholesterol, Albumin, Copper, Alk_Phos, SGOT, Tryglicerides, Platelets, Prothrombin)\n\n# Ensure numeric lab values\nlab_columns <- lab_columns %>% mutate_all(as.numeric)\n\n# Identify rows without missing values\ncomplete_cases <- complete.cases(lab_columns)\n\n# Filter both the original and lab data based on complete rows\nlab_values <- lab_columns[complete_cases, ]\ncirrhosis_data_clean <- cirrhosis_data[complete_cases, ]\n\n# Apply k-means clustering\nset.seed(123)\nkmeans_clusters <- kmeans(scale(lab_values), centers = 3)  # Adjust the number of clusters as needed\ncirrhosis_data_clean$Cluster <- as.factor(kmeans_clusters$cluster)\n\n# Function to classify values based on thresholds\nclassify_abnormal <- function(value, range) {\n  if (is.na(value)) {\n    return(NA)\n  } else if (value < range[1] || value > range[2]) {\n    return(\"Abnormal\")\n  } else {\n    return(\"Normal\")\n  }\n}\n\n# Apply the function to classify each lab value based on the thresholds\nfor (param in names(thresholds)) {\n  cirrhosis_data_clean[[paste0(param, \"_Class\")]] <- mapply(classify_abnormal, cirrhosis_data_clean[[param]], MoreArgs = list(range = thresholds[[param]]))\n}\n\n# Calculate the proportion of abnormal lab values per cluster\nabnormal_props <- cirrhosis_data_clean %>%\n  group_by(Cluster) %>%\n  summarize(across(ends_with(\"_Class\"), ~ mean(. == \"Abnormal\", na.rm = TRUE)))\n\nprint(abnormal_props)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 10\n  Cluster Bilirubin_Class Cholesterol_Class Albumin_Class Copper_Class\n  <fct>             <dbl>             <dbl>         <dbl>        <dbl>\n1 1                 0.978             0.911         0.756        0.733\n2 2                 0.496             0.866         0.433        0.756\n3 3                 0.452             1             0.298        0.606\n# ℹ 5 more variables: Alk_Phos_Class <dbl>, SGOT_Class <dbl>,\n#   Tryglicerides_Class <dbl>, Platelets_Class <dbl>, Prothrombin_Class <dbl>\n```\n:::\n\n```{.r .cell-code}\n# Survival Analysis\nlibrary(survival)\n\n# Create the survival object\nsurv_obj <- Surv(time = cirrhosis_data_clean$N_Days, event = ifelse(cirrhosis_data_clean$Status == \"D\", 1, 0))\n\n# Fit the survival model by clusters\nfit <- survfit(surv_obj ~ Cluster, data = cirrhosis_data_clean)\n\n# Plot Kaplan-Meier survival curves\nplot(fit, col = 1:3, lty = 1:3, xlab = \"Time (days)\", ylab = \"Survival Probability\")\nlegend(\"topright\", legend = levels(cirrhosis_data_clean$Cluster), col = 1:3, lty = 1:3)\n\n# Log-rank test to compare survival curves\nlog_rank_test <- survdiff(surv_obj ~ Cluster, data = cirrhosis_data_clean)\np_value <- 1 - pchisq(log_rank_test$chisq, length(log_rank_test$n) - 1)\ntitle(sub = paste(\"Log-rank p-value:\", round(p_value, 4)))\n```\n\n::: {.cell-output-display}\n![](about_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n### Describing which variables are heavily abnormal\n\nIn general, this code offers a methodical approach to recognize observations that display significant departures from typical values for several laboratory parameters, assisting in the identification of potentially alarming situations that require additional examination.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate the midpoint of the threshold range for each variable\nthreshold_midpoints <- sapply(thresholds, function(x) mean(x))\n\n# Calculate the distance of each observation's value from the midpoint of the threshold range for each variable\ndistances <- sapply(names(thresholds), function(var) abs(cirrhosis_data_clean[[var]] - threshold_midpoints[var]))\n\n# Summarize the distance across all threshold variables for each observation\ntotal_distance <- rowSums(distances)\n\n# Define a threshold for defining \"heavily abnormal\" observations\nthreshold_distance <- 3  # Example threshold (can be adjusted based on your requirements)\n\n# Determine which variables are heavily abnormal for each observation\nheavily_abnormal_vars <- apply(distances, 1, function(x) names(thresholds)[x > threshold_distance])\n\n# Create a new column indicating observations where the summarized distance exceeds the defined threshold\ncirrhosis_data_clean$Heavily_Abnormal <- ifelse(total_distance > threshold_distance, paste0(\"(\", paste(heavily_abnormal_vars, collapse = \", \"), \")\"), \"\")\n```\n:::\n\n\n### Overall summary of dataset\n\nAn overview of each variable's value distribution is given by this, making it easier to see any potential outliers or odd patterns, boxplots to see how the same variables are distributed. Boxplots make it simple to compare distributions across variables by displaying the data's median, quartiles, and any outliers. In general, this code offers a methodical approach to recognize observations that display significant departures from typical values for several laboratory parameters, assisting in the identification of potentially alarming situations that require additional examination.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate summary statistics\nsummary_stats <- summary(data_imputed[, c(\"Bilirubin\", \"Cholesterol\", \"Albumin\", \"Copper\", \"Alk_Phos\", \"SGOT\", \"Tryglicerides\", \"Platelets\", \"Prothrombin\")])\nprint(summary_stats)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Bilirubin       Cholesterol        Albumin          Copper      \n Min.   : 0.300   Min.   : 120.0   Min.   :1.960   Min.   :  4.00  \n 1st Qu.: 0.800   1st Qu.: 249.5   1st Qu.:3.310   1st Qu.: 42.75  \n Median : 1.400   Median : 310.0   Median :3.545   Median : 74.00  \n Mean   : 3.334   Mean   : 371.3   Mean   :3.517   Mean   :100.77  \n 3rd Qu.: 3.525   3rd Qu.: 401.0   3rd Qu.:3.772   3rd Qu.:129.25  \n Max.   :28.000   Max.   :1775.0   Max.   :4.400   Max.   :588.00  \n    Alk_Phos            SGOT        Tryglicerides     Platelets    \n Min.   :  289.0   Min.   : 28.38   Min.   : 33.0   Min.   : 62.0  \n 1st Qu.:  922.5   1st Qu.: 82.46   1st Qu.: 85.0   1st Qu.:200.0  \n Median : 1277.5   Median :116.62   Median :108.0   Median :257.0  \n Mean   : 1996.6   Mean   :124.12   Mean   :125.0   Mean   :261.8  \n 3rd Qu.: 2068.2   3rd Qu.:153.45   3rd Qu.:151.2   3rd Qu.:318.2  \n Max.   :13862.4   Max.   :457.25   Max.   :598.0   Max.   :563.0  \n  Prothrombin   \n Min.   : 9.00  \n 1st Qu.:10.00  \n Median :10.60  \n Mean   :10.74  \n 3rd Qu.:11.20  \n Max.   :17.10  \n```\n:::\n\n```{.r .cell-code}\n#measures such as mean, median, standard deviation, minimum, and maximum. This will give you an overview of the distribution of values and help identify potential outliers.\n\n\n# Visualize the distribution using boxplots\nboxplot(data[, c(\"Bilirubin\", \"Cholesterol\", \"Albumin\", \"Copper\", \"Alk_Phos\", \"SGOT\", \"Tryglicerides\", \"Platelets\", \"Prothrombin\")])\n```\n\n::: {.cell-output-display}\n![](about_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "about_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}