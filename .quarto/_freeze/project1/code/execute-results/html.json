{
  "hash": "9a109b37e2d6bd959fb29869eea4edbe",
  "result": {
    "markdown": "---\ntitle: \"code\"\n---\n\n::: {.cell}\n\n```{.r .cell-code}\ndata = read.csv(\"C:/Users/HP/Downloads/cirrhosis+patient+survival+prediction+dataset-1/cirrhosis.csv\")\nhead(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  ID N_Days Status            Drug   Age Sex Ascites Hepatomegaly Spiders Edema\n1  1    400      D D-penicillamine 21464   F       Y            Y       Y     Y\n2  2   4500      C D-penicillamine 20617   F       N            Y       Y     N\n3  3   1012      D D-penicillamine 25594   M       N            N       N     S\n4  4   1925      D D-penicillamine 19994   F       N            Y       Y     S\n5  5   1504     CL         Placebo 13918   F       N            Y       Y     N\n6  6   2503      D         Placebo 24201   F       N            Y       N     N\n  Bilirubin Cholesterol Albumin Copper Alk_Phos   SGOT Tryglicerides Platelets\n1      14.5         261    2.60    156   1718.0 137.95           172       190\n2       1.1         302    4.14     54   7394.8 113.52            88       221\n3       1.4         176    3.48    210    516.0  96.10            55       151\n4       1.8         244    2.54     64   6121.8  60.63            92       183\n5       3.4         279    3.53    143    671.0 113.15            72       136\n6       0.8         248    3.98     50    944.0  93.00            63        NA\n  Prothrombin Stage\n1        12.2     4\n2        10.6     3\n3        12.0     4\n4        10.3     4\n5        10.9     3\n6        11.0     3\n```\n:::\n\n```{.r .cell-code}\nstr(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n'data.frame':\t418 obs. of  20 variables:\n $ ID           : int  1 2 3 4 5 6 7 8 9 10 ...\n $ N_Days       : int  400 4500 1012 1925 1504 2503 1832 2466 2400 51 ...\n $ Status       : chr  \"D\" \"C\" \"D\" \"D\" ...\n $ Drug         : chr  \"D-penicillamine\" \"D-penicillamine\" \"D-penicillamine\" \"D-penicillamine\" ...\n $ Age          : int  21464 20617 25594 19994 13918 24201 20284 19379 15526 25772 ...\n $ Sex          : chr  \"F\" \"F\" \"M\" \"F\" ...\n $ Ascites      : chr  \"Y\" \"N\" \"N\" \"N\" ...\n $ Hepatomegaly : chr  \"Y\" \"Y\" \"N\" \"Y\" ...\n $ Spiders      : chr  \"Y\" \"Y\" \"N\" \"Y\" ...\n $ Edema        : chr  \"Y\" \"N\" \"S\" \"S\" ...\n $ Bilirubin    : num  14.5 1.1 1.4 1.8 3.4 0.8 1 0.3 3.2 12.6 ...\n $ Cholesterol  : int  261 302 176 244 279 248 322 280 562 200 ...\n $ Albumin      : num  2.6 4.14 3.48 2.54 3.53 3.98 4.09 4 3.08 2.74 ...\n $ Copper       : int  156 54 210 64 143 50 52 52 79 140 ...\n $ Alk_Phos     : num  1718 7395 516 6122 671 ...\n $ SGOT         : num  137.9 113.5 96.1 60.6 113.2 ...\n $ Tryglicerides: int  172 88 55 92 72 63 213 189 88 143 ...\n $ Platelets    : int  190 221 151 183 136 NA 204 373 251 302 ...\n $ Prothrombin  : num  12.2 10.6 12 10.3 10.9 11 9.7 11 11 11.5 ...\n $ Stage        : int  4 3 4 4 3 3 3 3 2 4 ...\n```\n:::\n\n```{.r .cell-code}\nmissing_values <- colSums(is.na(data))\nprint(missing_values)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n           ID        N_Days        Status          Drug           Age \n            0             0             0           106             0 \n          Sex       Ascites  Hepatomegaly       Spiders         Edema \n            0           106           106           106             0 \n    Bilirubin   Cholesterol       Albumin        Copper      Alk_Phos \n            0           134             0           108           106 \n         SGOT Tryglicerides     Platelets   Prothrombin         Stage \n          106           136            11             2             6 \n```\n:::\n\n```{.r .cell-code}\n# If there are missing values, impute them using mean imputation\ndata_imputed <- na.omit(data)\n\nhead(data_imputed)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  ID N_Days Status            Drug   Age Sex Ascites Hepatomegaly Spiders Edema\n1  1    400      D D-penicillamine 21464   F       Y            Y       Y     Y\n2  2   4500      C D-penicillamine 20617   F       N            Y       Y     N\n3  3   1012      D D-penicillamine 25594   M       N            N       N     S\n4  4   1925      D D-penicillamine 19994   F       N            Y       Y     S\n5  5   1504     CL         Placebo 13918   F       N            Y       Y     N\n7  7   1832      C         Placebo 20284   F       N            Y       N     N\n  Bilirubin Cholesterol Albumin Copper Alk_Phos   SGOT Tryglicerides Platelets\n1      14.5         261    2.60    156   1718.0 137.95           172       190\n2       1.1         302    4.14     54   7394.8 113.52            88       221\n3       1.4         176    3.48    210    516.0  96.10            55       151\n4       1.8         244    2.54     64   6121.8  60.63            92       183\n5       3.4         279    3.53    143    671.0 113.15            72       136\n7       1.0         322    4.09     52    824.0  60.45           213       204\n  Prothrombin Stage\n1        12.2     4\n2        10.6     3\n3        12.0     4\n4        10.3     4\n5        10.9     3\n7         9.7     3\n```\n:::\n\n```{.r .cell-code}\ncirrhosis_data <- na.omit(data_imputed)\nhead(cirrhosis_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  ID N_Days Status            Drug   Age Sex Ascites Hepatomegaly Spiders Edema\n1  1    400      D D-penicillamine 21464   F       Y            Y       Y     Y\n2  2   4500      C D-penicillamine 20617   F       N            Y       Y     N\n3  3   1012      D D-penicillamine 25594   M       N            N       N     S\n4  4   1925      D D-penicillamine 19994   F       N            Y       Y     S\n5  5   1504     CL         Placebo 13918   F       N            Y       Y     N\n7  7   1832      C         Placebo 20284   F       N            Y       N     N\n  Bilirubin Cholesterol Albumin Copper Alk_Phos   SGOT Tryglicerides Platelets\n1      14.5         261    2.60    156   1718.0 137.95           172       190\n2       1.1         302    4.14     54   7394.8 113.52            88       221\n3       1.4         176    3.48    210    516.0  96.10            55       151\n4       1.8         244    2.54     64   6121.8  60.63            92       183\n5       3.4         279    3.53    143    671.0 113.15            72       136\n7       1.0         322    4.09     52    824.0  60.45           213       204\n  Prothrombin Stage\n1        12.2     4\n2        10.6     3\n3        12.0     4\n4        10.3     4\n5        10.9     3\n7         9.7     3\n```\n:::\n\n```{.r .cell-code}\n# Load necessary libraries\nlibrary(dplyr)  # For data manipulation\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'dplyr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)  # For data visualization\nlibrary(caret)  # For machine learning model fitting\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'caret' was built under R version 4.3.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: lattice\n```\n:::\n\n```{.r .cell-code}\nlibrary(survival) # For survival analysis\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'survival'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:caret':\n\n    cluster\n```\n:::\n\n```{.r .cell-code}\nlibrary(anomalize)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'anomalize' was built under R version 4.3.3\n```\n:::\n\n```{.r .cell-code}\nlibrary(mvoutlier)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'mvoutlier' was built under R version 4.3.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: sgeostat\n```\n:::\n\n```{.r .cell-code}\n#predata analysis.\n\n\n\n\n# 1. Exploratory Data Analysis for each feature variable\n\n\n# Drug\nggplot(data_imputed, aes(x = Drug)) +\n  geom_bar(fill = \"skyblue\", color = \"black\") +\n  labs(x = \"Drug\", y = \"Count\", title = \"Distribution of Drug\")\n```\n\n::: {.cell-output-display}\n![](code_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Age\nggplot(data_imputed, aes(x = Age)) +\n  geom_histogram(binwidth = 1000, fill = \"skyblue\", color = \"black\") +\n  labs(x = \"Age\", y = \"Frequency\", title = \"Distribution of Age\")\n```\n\n::: {.cell-output-display}\n![](code_files/figure-html/unnamed-chunk-1-2.png){width=672}\n:::\n\n```{.r .cell-code}\n# Sex\nggplot(data_imputed, aes(x = Sex)) +\n  geom_bar(fill = \"skyblue\", color = \"black\") +\n  labs(x = \"Sex\", y = \"Count\", title = \"Distribution of Sex\")\n```\n\n::: {.cell-output-display}\n![](code_files/figure-html/unnamed-chunk-1-3.png){width=672}\n:::\n\n```{.r .cell-code}\n# Ascites\nggplot(data_imputed, aes(x = Ascites)) +\n  geom_bar(fill = \"skyblue\", color = \"black\") +\n  labs(x = \"Ascites\", y = \"Count\", title = \"Distribution of Ascites\")\n```\n\n::: {.cell-output-display}\n![](code_files/figure-html/unnamed-chunk-1-4.png){width=672}\n:::\n\n```{.r .cell-code}\n# Hepatomegaly\nggplot(data_imputed, aes(x = Hepatomegaly)) +\n  geom_bar(fill = \"skyblue\", color = \"black\") +\n  labs(x = \"Hepatomegaly\", y = \"Count\", title = \"Distribution of Hepatomegaly\")\n```\n\n::: {.cell-output-display}\n![](code_files/figure-html/unnamed-chunk-1-5.png){width=672}\n:::\n\n```{.r .cell-code}\n# Spiders\nggplot(data_imputed, aes(x = Spiders)) +\n  geom_bar(fill = \"skyblue\", color = \"black\") +\n  labs(x = \"Spiders\", y = \"Count\", title = \"Distribution of Spiders\")\n```\n\n::: {.cell-output-display}\n![](code_files/figure-html/unnamed-chunk-1-6.png){width=672}\n:::\n\n```{.r .cell-code}\n# Edema\nggplot(data_imputed, aes(x = Edema)) +\n  geom_bar(fill = \"skyblue\", color = \"black\") +\n  labs(x = \"Edema\", y = \"Count\", title = \"Distribution of Edema\")\n```\n\n::: {.cell-output-display}\n![](code_files/figure-html/unnamed-chunk-1-7.png){width=672}\n:::\n\n```{.r .cell-code}\n# Bilirubin\nggplot(data_imputed, aes(x = Bilirubin)) +\n  geom_histogram(binwidth = 1, fill = \"skyblue\", color = \"black\") +\n  labs(x = \"Bilirubin\", y = \"Frequency\", title = \"Distribution of Bilirubin\")\n```\n\n::: {.cell-output-display}\n![](code_files/figure-html/unnamed-chunk-1-8.png){width=672}\n:::\n\n```{.r .cell-code}\n# Cholesterol\nggplot(data_imputed, aes(x = Cholesterol)) +\n  geom_histogram(binwidth = 50, fill = \"skyblue\", color = \"black\") +\n  labs(x = \"Cholesterol\", y = \"Frequency\", title = \"Distribution of Cholesterol\")\n```\n\n::: {.cell-output-display}\n![](code_files/figure-html/unnamed-chunk-1-9.png){width=672}\n:::\n\n```{.r .cell-code}\n# Albumin\nggplot(data_imputed, aes(x = Albumin)) +\n  geom_histogram(binwidth = 0.5, fill = \"skyblue\", color = \"black\") +\n  labs(x = \"Albumin\", y = \"Frequency\", title = \"Distribution of Albumin\")\n```\n\n::: {.cell-output-display}\n![](code_files/figure-html/unnamed-chunk-1-10.png){width=672}\n:::\n\n```{.r .cell-code}\n# Copper\nggplot(data_imputed, aes(x = Copper)) +\n  geom_histogram(binwidth = 50, fill = \"skyblue\", color = \"black\") +\n  labs(x = \"Copper\", y = \"Frequency\", title = \"Distribution of Copper\")\n```\n\n::: {.cell-output-display}\n![](code_files/figure-html/unnamed-chunk-1-11.png){width=672}\n:::\n\n```{.r .cell-code}\n# Alk_Phos\nggplot(data_imputed, aes(x = Alk_Phos)) +\n  geom_histogram(binwidth = 500, fill = \"skyblue\", color = \"black\") +\n  labs(x = \"Alkaline Phosphatase\", y = \"Frequency\", title = \"Distribution of Alkaline Phosphatase\")\n```\n\n::: {.cell-output-display}\n![](code_files/figure-html/unnamed-chunk-1-12.png){width=672}\n:::\n\n```{.r .cell-code}\n# SGOT\nggplot(data_imputed, aes(x = SGOT)) +\n  geom_histogram(binwidth = 10, fill = \"skyblue\", color = \"black\") +\n  labs(x = \"SGOT\", y = \"Frequency\", title = \"Distribution of SGOT\")\n```\n\n::: {.cell-output-display}\n![](code_files/figure-html/unnamed-chunk-1-13.png){width=672}\n:::\n\n```{.r .cell-code}\n# Triglycerides\nggplot(data_imputed, aes(x = Tryglicerides)) +\n  geom_histogram(binwidth = 10, fill = \"skyblue\", color = \"black\") +\n  labs(x = \"Triglycerides\", y = \"Frequency\", title = \"Distribution of Triglycerides\")\n```\n\n::: {.cell-output-display}\n![](code_files/figure-html/unnamed-chunk-1-14.png){width=672}\n:::\n\n```{.r .cell-code}\n# Platelets\nggplot(data_imputed, aes(x = Platelets)) +\n  geom_histogram(binwidth = 50, fill = \"skyblue\", color = \"black\") +\n  labs(x = \"Platelets\", y = \"Frequency\", title = \"Distribution of Platelets\")\n```\n\n::: {.cell-output-display}\n![](code_files/figure-html/unnamed-chunk-1-15.png){width=672}\n:::\n\n```{.r .cell-code}\n# Prothrombin\nggplot(data_imputed, aes(x = Prothrombin)) +\n  geom_histogram(binwidth = 0.5, fill = \"skyblue\", color = \"black\") +\n  labs(x = \"Prothrombin\", y = \"Frequency\", title = \"Distribution of Prothrombin\")\n```\n\n::: {.cell-output-display}\n![](code_files/figure-html/unnamed-chunk-1-16.png){width=672}\n:::\n\n```{.r .cell-code}\n# Stage\nggplot(data_imputed, aes(x = Stage)) +\n  geom_bar(fill = \"skyblue\", color = \"black\") +\n  labs(x = \"Stage\", y = \"Count\", title = \"Distribution of Stage\")\n```\n\n::: {.cell-output-display}\n![](code_files/figure-html/unnamed-chunk-1-17.png){width=672}\n:::\n\n```{.r .cell-code}\n#This is to find which disease is more affecting the status target variable.\n\n\n# Create contingency tables for each disease-related feature and Status\ntable_ascites <- table(data_imputed$Ascites, data_imputed$Status)\ntable_hepatomegaly <- table(data_imputed$Hepatomegaly, data_imputed$Status)\ntable_spiders <- table(data_imputed$Spiders, data_imputed$Status)\ntable_edema <- table(data_imputed$Edema, data_imputed$Status)\n\n# Create contingency table for Status and each disease-related feature\ntable_status_ascites <- table(data_imputed$Status, data_imputed$Ascites)\ntable_status_hepatomegaly <- table(data_imputed$Status, data_imputed$Hepatomegaly)\ntable_status_spiders <- table(data_imputed$Status, data_imputed$Spiders)\ntable_status_edema <- table(data_imputed$Status, data_imputed$Edema)\n\n# Visualize the relationship using stacked bar charts\npar(mfrow = c(2, 2))  # Set up a 2x2 layout for plots\nbarplot(table_ascites, beside = TRUE, legend = TRUE, main = \"Ascites vs. Status\")\nbarplot(table_hepatomegaly, beside = TRUE, legend = TRUE, main = \"Hepatomegaly vs. Status\")\nbarplot(table_spiders, beside = TRUE, legend = TRUE, main = \"Spiders vs. Status\")\nbarplot(table_edema, beside = TRUE, legend = TRUE, main = \"Edema vs. Status\")\n```\n\n::: {.cell-output-display}\n![](code_files/figure-html/unnamed-chunk-1-18.png){width=672}\n:::\n\n```{.r .cell-code}\n# Conduct chi-square tests for independence\nchi_sq_ascites <- chisq.test(table_ascites)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in chisq.test(table_ascites): Chi-squared approximation may be\nincorrect\n```\n:::\n\n```{.r .cell-code}\nchi_sq_hepatomegaly <- chisq.test(table_hepatomegaly)\nchi_sq_spiders <- chisq.test(table_spiders)\nchi_sq_edema <- chisq.test(table_edema)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in chisq.test(table_edema): Chi-squared approximation may be incorrect\n```\n:::\n\n```{.r .cell-code}\n# Conduct chi-square tests for independence with Status and each disease-related feature\nchi_sq_status_ascites <- chisq.test(table_status_ascites)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in chisq.test(table_status_ascites): Chi-squared approximation may be\nincorrect\n```\n:::\n\n```{.r .cell-code}\nchi_sq_status_hepatomegaly <- chisq.test(table_status_hepatomegaly)\nchi_sq_status_spiders <- chisq.test(table_status_spiders)\nchi_sq_status_edema <- chisq.test(table_status_edema)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in chisq.test(table_status_edema): Chi-squared approximation may be\nincorrect\n```\n:::\n\n```{.r .cell-code}\n# Print the results of chi-square tests\nprint(\"Chi-square test results for Ascites vs. Status:\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Chi-square test results for Ascites vs. Status:\"\n```\n:::\n\n```{.r .cell-code}\nprint(chi_sq_ascites)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tPearson's Chi-squared test\n\ndata:  table_ascites\nX-squared = 25.237, df = 2, p-value = 3.31e-06\n```\n:::\n\n```{.r .cell-code}\nprint(\"Chi-square test results for Hepatomegaly vs. Status:\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Chi-square test results for Hepatomegaly vs. Status:\"\n```\n:::\n\n```{.r .cell-code}\nprint(chi_sq_hepatomegaly)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tPearson's Chi-squared test\n\ndata:  table_hepatomegaly\nX-squared = 24.805, df = 2, p-value = 4.109e-06\n```\n:::\n\n```{.r .cell-code}\nprint(\"Chi-square test results for Spiders vs. Status:\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Chi-square test results for Spiders vs. Status:\"\n```\n:::\n\n```{.r .cell-code}\nprint(chi_sq_spiders)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tPearson's Chi-squared test\n\ndata:  table_spiders\nX-squared = 14.5, df = 2, p-value = 0.0007102\n```\n:::\n\n```{.r .cell-code}\nprint(\"Chi-square test results for Edema vs. Status:\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Chi-square test results for Edema vs. Status:\"\n```\n:::\n\n```{.r .cell-code}\nprint(chi_sq_edema)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tPearson's Chi-squared test\n\ndata:  table_edema\nX-squared = 31.267, df = 4, p-value = 2.7e-06\n```\n:::\n\n```{.r .cell-code}\n# Print the results of chi-square tests for Status and each disease-related feature\nprint(\"Chi-square test results for Status vs. Ascites:\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Chi-square test results for Status vs. Ascites:\"\n```\n:::\n\n```{.r .cell-code}\nprint(chi_sq_status_ascites)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tPearson's Chi-squared test\n\ndata:  table_status_ascites\nX-squared = 25.237, df = 2, p-value = 3.31e-06\n```\n:::\n\n```{.r .cell-code}\nprint(\"Chi-square test results for Status vs. Hepatomegaly:\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Chi-square test results for Status vs. Hepatomegaly:\"\n```\n:::\n\n```{.r .cell-code}\nprint(chi_sq_status_hepatomegaly)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tPearson's Chi-squared test\n\ndata:  table_status_hepatomegaly\nX-squared = 24.805, df = 2, p-value = 4.109e-06\n```\n:::\n\n```{.r .cell-code}\nprint(\"Chi-square test results for Status vs. Spiders:\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Chi-square test results for Status vs. Spiders:\"\n```\n:::\n\n```{.r .cell-code}\nprint(chi_sq_status_spiders)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tPearson's Chi-squared test\n\ndata:  table_status_spiders\nX-squared = 14.5, df = 2, p-value = 0.0007102\n```\n:::\n\n```{.r .cell-code}\nprint(\"Chi-square test results for Status vs. Edema:\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Chi-square test results for Status vs. Edema:\"\n```\n:::\n\n```{.r .cell-code}\nprint(chi_sq_status_edema)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tPearson's Chi-squared test\n\ndata:  table_status_edema\nX-squared = 31.267, df = 4, p-value = 2.7e-06\n```\n:::\n\n```{.r .cell-code}\n#Overall, Ascites, Hepatomegaly, and Edema seem to have a significant impact on the disease outcome,\n#based on their lower p-values compared to Spiders.\n#Among these, Ascites and Hepatomegaly might have slightly stronger associations with the disease outcome, given their lower p-values.\n\n# Define thresholds for abnormal values based on general reference ranges\nthresholds <- list(\n  Bilirubin = c(0.3, 1.2),              # Normal total bilirubin levels (mg/dL)\n  Cholesterol = c(0, 200),               # Normal total cholesterol levels (mg/dL)\n  Albumin = c(3.5, 5.0),                 # Normal serum albumin levels (g/dL)\n  Copper = c(70, 140),                   # Normal serum copper levels (µg/dL)\n  Alk_Phos = c(44, 147),                 # Normal alkaline phosphatase levels (IU/L)\n  SGOT = c(0, 40),                       # Normal serum glutamic-oxaloacetic transaminase levels (IU/L)\n  Tryglicerides = c(0, 150),             # Normal triglyceride levels (mg/dL)\n  Platelets = c(150, 450),         # Normal platelet counts (per microliter of blood)\n  Prothrombin = c(11, 13.5)              # Normal prothrombin time (seconds)\n)\n\n# Select the relevant lab value columns\nlab_columns <- cirrhosis_data %>%\n  select(Bilirubin, Cholesterol, Albumin, Copper, Alk_Phos, SGOT, Tryglicerides, Platelets, Prothrombin)\n\n# Ensure numeric lab values\nlab_columns <- lab_columns %>% mutate_all(as.numeric)\n\n# Identify rows without missing values\ncomplete_cases <- complete.cases(lab_columns)\n\n# Filter both the original and lab data based on complete rows\nlab_values <- lab_columns[complete_cases, ]\ncirrhosis_data_clean <- cirrhosis_data[complete_cases, ]\n\n# Apply k-means clustering\nset.seed(123)\nkmeans_clusters <- kmeans(scale(lab_values), centers = 3)  # Adjust the number of clusters as needed\ncirrhosis_data_clean$Cluster <- as.factor(kmeans_clusters$cluster)\n\n# Function to classify values based on thresholds\nclassify_abnormal <- function(value, range) {\n  if (is.na(value)) {\n    return(NA)\n  } else if (value < range[1] || value > range[2]) {\n    return(\"Abnormal\")\n  } else {\n    return(\"Normal\")\n  }\n}\n\n# Apply the function to classify each lab value based on the thresholds\nfor (param in names(thresholds)) {\n  cirrhosis_data_clean[[paste0(param, \"_Class\")]] <- mapply(classify_abnormal, cirrhosis_data_clean[[param]], MoreArgs = list(range = thresholds[[param]]))\n}\n\n# Calculate the proportion of abnormal lab values per cluster\nabnormal_props <- cirrhosis_data_clean %>%\n  group_by(Cluster) %>%\n  summarize(across(ends_with(\"_Class\"), ~ mean(. == \"Abnormal\", na.rm = TRUE)))\n\nprint(abnormal_props)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 10\n  Cluster Bilirubin_Class Cholesterol_Class Albumin_Class Copper_Class\n  <fct>             <dbl>             <dbl>         <dbl>        <dbl>\n1 1                 0.978             0.911         0.756        0.733\n2 2                 0.496             0.866         0.433        0.756\n3 3                 0.452             1             0.298        0.606\n# ℹ 5 more variables: Alk_Phos_Class <dbl>, SGOT_Class <dbl>,\n#   Tryglicerides_Class <dbl>, Platelets_Class <dbl>, Prothrombin_Class <dbl>\n```\n:::\n\n```{.r .cell-code}\n# Survival Analysis\nlibrary(survival)\n\n# Create the survival object\nsurv_obj <- Surv(time = cirrhosis_data_clean$N_Days, event = ifelse(cirrhosis_data_clean$Status == \"D\", 1, 0))\n\n# Fit the survival model by clusters\nfit <- survfit(surv_obj ~ Cluster, data = cirrhosis_data_clean)\n\n# Plot Kaplan-Meier survival curves\nplot(fit, col = 1:3, lty = 1:3, xlab = \"Time (days)\", ylab = \"Survival Probability\")\nlegend(\"topright\", legend = levels(cirrhosis_data_clean$Cluster), col = 1:3, lty = 1:3)\n\n# Log-rank test to compare survival curves\nlog_rank_test <- survdiff(surv_obj ~ Cluster, data = cirrhosis_data_clean)\np_value <- 1 - pchisq(log_rank_test$chisq, length(log_rank_test$n) - 1)\ntitle(sub = paste(\"Log-rank p-value:\", round(p_value, 4)))\n\n# Calculate the midpoint of the threshold range for each variable\nthreshold_midpoints <- sapply(thresholds, function(x) mean(x))\n\n# Calculate the distance of each observation's value from the midpoint of the threshold range for each variable\ndistances <- sapply(names(thresholds), function(var) abs(cirrhosis_data_clean[[var]] - threshold_midpoints[var]))\n\n# Summarize the distance across all threshold variables for each observation\ntotal_distance <- rowSums(distances)\n\n# Define a threshold for defining \"heavily abnormal\" observations\nthreshold_distance <- 3  # Example threshold (can be adjusted based on your requirements)\n\n# Determine which variables are heavily abnormal for each observation\nheavily_abnormal_vars <- apply(distances, 1, function(x) names(thresholds)[x > threshold_distance])\n\n# Create a new column indicating observations where the summarized distance exceeds the defined threshold\ncirrhosis_data_clean$Heavily_Abnormal <- ifelse(total_distance > threshold_distance, paste0(\"(\", paste(heavily_abnormal_vars, collapse = \", \"), \")\"), \"\")\n\n# Print the first few rows of the updated dataset\nhead(data_imputed)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  ID N_Days Status            Drug   Age Sex Ascites Hepatomegaly Spiders Edema\n1  1    400      D D-penicillamine 21464   F       Y            Y       Y     Y\n2  2   4500      C D-penicillamine 20617   F       N            Y       Y     N\n3  3   1012      D D-penicillamine 25594   M       N            N       N     S\n4  4   1925      D D-penicillamine 19994   F       N            Y       Y     S\n5  5   1504     CL         Placebo 13918   F       N            Y       Y     N\n7  7   1832      C         Placebo 20284   F       N            Y       N     N\n  Bilirubin Cholesterol Albumin Copper Alk_Phos   SGOT Tryglicerides Platelets\n1      14.5         261    2.60    156   1718.0 137.95           172       190\n2       1.1         302    4.14     54   7394.8 113.52            88       221\n3       1.4         176    3.48    210    516.0  96.10            55       151\n4       1.8         244    2.54     64   6121.8  60.63            92       183\n5       3.4         279    3.53    143    671.0 113.15            72       136\n7       1.0         322    4.09     52    824.0  60.45           213       204\n  Prothrombin Stage\n1        12.2     4\n2        10.6     3\n3        12.0     4\n4        10.3     4\n5        10.9     3\n7         9.7     3\n```\n:::\n\n```{.r .cell-code}\n#now we will decide the feature variables whether they are normal or abnormal with help of statistical analysis \n#visualization and references.\n\n# Calculate summary statistics\nsummary_stats <- summary(data_imputed[, c(\"Bilirubin\", \"Cholesterol\", \"Albumin\", \"Copper\", \"Alk_Phos\", \"SGOT\", \"Tryglicerides\", \"Platelets\", \"Prothrombin\")])\nprint(summary_stats)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Bilirubin       Cholesterol        Albumin          Copper      \n Min.   : 0.300   Min.   : 120.0   Min.   :1.960   Min.   :  4.00  \n 1st Qu.: 0.800   1st Qu.: 249.5   1st Qu.:3.310   1st Qu.: 42.75  \n Median : 1.400   Median : 310.0   Median :3.545   Median : 74.00  \n Mean   : 3.334   Mean   : 371.3   Mean   :3.517   Mean   :100.77  \n 3rd Qu.: 3.525   3rd Qu.: 401.0   3rd Qu.:3.772   3rd Qu.:129.25  \n Max.   :28.000   Max.   :1775.0   Max.   :4.400   Max.   :588.00  \n    Alk_Phos            SGOT        Tryglicerides     Platelets    \n Min.   :  289.0   Min.   : 28.38   Min.   : 33.0   Min.   : 62.0  \n 1st Qu.:  922.5   1st Qu.: 82.46   1st Qu.: 85.0   1st Qu.:200.0  \n Median : 1277.5   Median :116.62   Median :108.0   Median :257.0  \n Mean   : 1996.6   Mean   :124.12   Mean   :125.0   Mean   :261.8  \n 3rd Qu.: 2068.2   3rd Qu.:153.45   3rd Qu.:151.2   3rd Qu.:318.2  \n Max.   :13862.4   Max.   :457.25   Max.   :598.0   Max.   :563.0  \n  Prothrombin   \n Min.   : 9.00  \n 1st Qu.:10.00  \n Median :10.60  \n Mean   :10.74  \n 3rd Qu.:11.20  \n Max.   :17.10  \n```\n:::\n\n```{.r .cell-code}\n#measures such as mean, median, standard deviation, minimum, and maximum. This will give you an overview of the distribution of values and help identify potential outliers.\n\n\n# Visualize the distribution using boxplots\nboxplot(data[, c(\"Bilirubin\", \"Cholesterol\", \"Albumin\", \"Copper\", \"Alk_Phos\", \"SGOT\", \"Tryglicerides\", \"Platelets\", \"Prothrombin\")])\n\n#Look for any extreme values or unusual patterns in the data that may indicate abnormality.\n\n#Clinical Guidelines:\n#we'll need to consult clinical guidelines or literature for reference ranges. For example, for bilirubin, you might consider a range of 0.2-1.2 mg/dL as normal.\n#Expert Opinion:\n#Seek input from medical professionals or domain experts who can provide guidance on what values are considered abnormal in the context of liver cirrhosis.\n\n\n#research questions \n\n\n#1)Is there a significant interaction effect between drug treatment (D-penicillamine vs placebo) and ascites status (present vs absent) on survival time?\n\nlibrary(survival)\nlibrary(car)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'car' was built under R version 4.3.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: carData\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'carData' was built under R version 4.3.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'car'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:dplyr':\n\n    recode\n```\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(survminer)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'survminer' was built under R version 4.3.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: ggpubr\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'ggpubr' was built under R version 4.3.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'survminer'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:survival':\n\n    myeloma\n```\n:::\n\n```{.r .cell-code}\n# Convert 'Status' to a binary indicator\ndata_imputed$Event <- ifelse(data_imputed$Status == \"D\", 1, 0)\n\n# Create survival object\nsurv_obj <- Surv(time = data_imputed$N_Days, event = data_imputed$Event)\n\n# Fit a Cox proportional hazards model with the new survival object\ncoxph_model <- coxph(surv_obj ~ Drug * Ascites, data = data_imputed)\n\ncoef(coxph_model)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n         DrugPlacebo             AscitesY DrugPlacebo:AscitesY \n          -0.1030267            2.1423633            0.3507101 \n```\n:::\n\n```{.r .cell-code}\n# Test the interaction effect\nAnova(coxph_model, type = \"III\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAnalysis of Deviance Table (Type III tests)\n             LR Chisq Df Pr(>Chisq)    \nDrug           0.2462  1     0.6198    \nAscites       23.0446  1  1.583e-06 ***\nDrug:Ascites   0.4391  1     0.5075    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n\n```{.r .cell-code}\n# Create a factor variable for the combination of Drug and Ascites\ndata_imputed$Drug_Ascites <- with(data_imputed, interaction(Drug, Ascites))\n\n# Plot Kaplan-Meier survival curves\nggsurvplot(\n  survfit(surv_obj ~ Drug_Ascites, data = data_imputed),\n  data = data_imputed,\n  risk.table = TRUE,\n  pval = TRUE,\n  conf.int = TRUE,\n  xlab = \"Time (days)\",\n  ggtheme = theme_bw()\n)\n\n#Drug: The likelihood ratio (LR) chi-square statistic is 0.0738 with 1 degree of freedom, resulting in a p-value of 0.7859. This indicates that the effect of the 'Drug' variable alone is not statistically significant.\n#Ascites: The LR chi-square statistic is 10.8940 with 1 degree of freedom, yielding a highly significant p-value of 0.0009647. This suggests that the presence of ascites significantly affects survival outcomes.\n#Drug:Ascites Interaction: The LR chi-square statistic is 0.0923 with 1 degree of freedom, leading to a p-value of 0.7613. This implies that there is no statistically significant interaction effect between 'Drug' and 'Ascites' on survival outcomes.\n#These results indicate that while ascites is a significant predictor of survival outcomes, neither the 'Drug' variable nor its interaction with ascites significantly affects survival outcomes in this analysis.\n\n\n#2)Do the distributions of lab values (bilirubin, albumin, etc.) differ significantly between patients with and without edema?\n\nlibrary(dplyr)\nlibrary(ggpubr)\n\n# Group patients by edema status\ncirrhosis_edema <- data_imputed %>% \n  mutate(Edema_Status = ifelse(Edema %in% c(\"Y\", \"S\"), \"Edema\", \"No Edema\"))\n\n# Perform one-way ANOVA or Kruskal-Wallis tests for each lab value\nggboxplot(cirrhosis_edema, x=\"Edema_Status\", y=\"Bilirubin\") + \n  stat_compare_means(method=\"anova\")\n\n\nkruskal.test(Albumin ~ Edema_Status, data=cirrhosis_edema)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tKruskal-Wallis rank sum test\n\ndata:  Albumin by Edema_Status\nKruskal-Wallis chi-squared = 24.13, df = 1, p-value = 9.005e-07\n```\n:::\n\n```{.r .cell-code}\n#3)Do the relationships between lab values (e.g. bilirubin vs albumin) differ significantly between treatment groups?\n\n# Load required libraries\nlibrary(randomForest)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'randomForest' was built under R version 4.3.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nrandomForest 4.7-1.1\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nType rfNews() to see new features/changes/bug fixes.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'randomForest'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:ggplot2':\n\n    margin\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:dplyr':\n\n    combine\n```\n:::\n\n```{.r .cell-code}\nlibrary(caret)\n\n# Define your dataset and target variable\nX <- cirrhosis_data[, c(\"Bilirubin\", \"Albumin\")]\ny <- as.factor(cirrhosis_data$Drug)  # Convert Treatment to a factor for classification\n\n# Split data into training and testing sets\nset.seed(123)\ntrain_index <- createDataPartition(y, p = 0.8, list = FALSE)\nX_train <- X[train_index, ]\ny_train <- y[train_index]\nX_test <- X[-train_index, ]\ny_test <- y[-train_index]\n\n# Train separate Random Forest models for each treatment group\n# Train separate Random Forest models for each treatment group\ntreatment_levels <- levels(y)\nrf_models <- list()\nfor (treatment_level in treatment_levels) {\n  y_train_treatment <- ifelse(y_train == treatment_level, 1, 0)  # Convert treatment level to binary indicator\n  rf_models[[treatment_level]] <- randomForest(x = X_train, y = y_train_treatment, ntree = 100)\n}\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in randomForest.default(x = X_train, y = y_train_treatment, ntree =\n100): The response has five or fewer unique values.  Are you sure you want to\ndo regression?\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in randomForest.default(x = X_train, y = y_train_treatment, ntree =\n100): The response has five or fewer unique values.  Are you sure you want to\ndo regression?\n```\n:::\n\n```{.r .cell-code}\nfeature_importance <- lapply(rf_models, importance)\n\n# Print feature importance for each treatment group\nfor (treatment_level in treatment_levels) {\n  cat(\"Treatment Group:\", treatment_level, \"\\n\")\n  print(feature_importance[[treatment_level]])\n  cat(\"\\n\")\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nTreatment Group: D-penicillamine \n          IncNodePurity\nBilirubin      18.87986\nAlbumin        22.87848\n\nTreatment Group: Placebo \n          IncNodePurity\nBilirubin      18.68447\nAlbumin        22.79035\n```\n:::\n\n::: {.cell-output-display}\n![](code_files/figure-html/unnamed-chunk-1-19.png){width=672}\n:::\n:::\n",
    "supporting": [
      "code_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}